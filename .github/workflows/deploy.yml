name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggers

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: parenting-assistant-backend
  REGION: us-central1

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Authenticate with Google Cloud using Service Account Key
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ✅ Set up Google Cloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # ✅ Configure Docker authentication for Google Container Registry (GCR)
      - name: Configure Docker authentication
        run: |
          gcloud auth configure-docker gcr.io --quiet

      # ✅ Build Docker Image
      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

      # ✅ Push Docker Image to GCR
      - name: Push Docker image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest

      # ✅ Deploy the Container to Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          env_vars: |
            NODE_ENV=production
            PORT=3000
            REDIS_URL=${{ secrets.REDIS_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_AUTH_STRING=${{ secrets.REDIS_AUTH_STRING }}
            FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
            FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}
            FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            API_RATE_LIMIT_WINDOW_MS=${{ secrets.API_RATE_LIMIT_WINDOW_MS }}
            API_RATE_LIMIT_MAX_REQUESTS=${{ secrets.API_RATE_LIMIT_MAX_REQUESTS }}
            AI_RATE_LIMIT_WINDOW_MS=${{ secrets.AI_RATE_LIMIT_WINDOW_MS }}
            AI_RATE_LIMIT_MAX_REQUESTS=${{ secrets.AI_RATE_LIMIT_MAX_REQUESTS }}
            CACHE_TTL=${{ secrets.CACHE_TTL }}
            CACHE_NAMESPACE=${{ secrets.CACHE_NAMESPACE }}
          flags: |
            --allow-unauthenticated
            --memory=1Gi
            --cpu=1
            --min-instances=0
            --max-instances=10
            --platform=managed

      # ✅ Show Service URL After Deployment
      - name: Show Service URL
        run: |
          echo "Service URL: $(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format='value(status.url)')"
